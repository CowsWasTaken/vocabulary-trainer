type IVocabulary {
    id: ID!
    foreignWord: String!
    translatedWord: String!
    updatedAt: Date!
    createdAt: Date!
    active: Boolean!
    favorite: Boolean!
    isKnown: Boolean!
    categorie: SpeechPart
    description: String
    sentence: String
    groupId: ID!
    group: IGroup!
}

input INewVocabulary {
    foreignWord: String!
    translatedWord: String!
    groupId: ID!
    active: Boolean
    favorite: Boolean
    isKnown: Boolean
    categorie: SpeechPart
    description: String
    sentence: String
}

input IUpdateVocabulary {
    id: ID!
    foreignWord: String
    translatedWord: String
    groupId: ID
    active: Boolean
    favorite: Boolean
    isKnown: Boolean
    categorie: SpeechPart
    description: String
    sentence: String
}

type Query {
    vocabularyById(id: ID!): IVocabulary
}

type Mutation {
    createVocabulary(input: INewVocabulary): IVocabulary!
    updateVocabulary (input: IUpdateVocabulary): IVocabulary!
    deleteVocabulary (id: ID): IVocabulary!
}

enum SpeechPart{
    NOUN
    PRONOUN
    VERB
    ADJECTIVE
    ADVERB
    PREPOSITION
    CONJUNCTION
    INTERJECTION
}
